name: Lint and Test
on:
  pull_request:
    paths-ignore:
      - 'components/**'
      - 'docs/**'
  push:
    branches:
      - main
    paths-ignore:
      - 'components/**'
      - 'docs/**'
      - 'mkdocs.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: '3.13'

permissions:
  contents: read

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Use Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 22.x
      - name: Install dependencies
        run: npm install
      - name: Build front end
        run: npm run build
      - name: Check types
        run: npm run type-check

  code-style:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Set up Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 22.x
      - name: Install JS dependencies
        run: npm install
      - id: file_changes
        uses: trilom/file-changes-action@v1.2.4
      - name: Run pre-commit hooks
        uses: pre-commit/action@v3.0.1
        with:
          extra_args: --files ${{ steps.file_changes.outputs.files }}

  check-uv-lock:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - uses: astral-sh/setup-uv@v6
      - name: Check lockfile
        run: uv lock --check --offline

  python-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    services:
      postgres:
        image: pgvector/pgvector:pg16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres_password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v5
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - name: Install Dependencies
        run: |
          uv venv
          uv sync --locked --dev
      - name: Run Tests
        env:
          DJANGO_DATABASE_USER: postgres
          DJANGO_DATABASE_PASSWORD: postgres_password
        run: uv run pytest -n auto --cov --cov-report=xml --junitxml=junit.xml -o junit_family=legacy

      - name: Upload results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

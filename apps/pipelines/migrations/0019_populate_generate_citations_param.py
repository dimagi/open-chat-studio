# Generated by Django 5.1.5 on 2025-07-14 13:47

from django.db import migrations

def set_generate_citations_true(apps, schema_editor):
    """Set generate_citations=True for all LLMResponseWithPrompt nodes that have a collection_index_id"""
    Node = apps.get_model('pipelines', 'Node')
    
    nodes_to_update = []
    for idx, node in enumerate(Node.objects.filter(type='LLMResponseWithPrompt').iterator(100)):
        node.params['generate_citations'] = True
        nodes_to_update.append(node)
        
        if idx % 100 == 0:
            Node.objects.bulk_update(nodes_to_update, ['params'])
            nodes_to_update = []

    # Update any remaining nodes
    if nodes_to_update:
        Node.objects.bulk_update(nodes_to_update, ['params'])

def remove_generate_citations_field(apps, schema_editor):
    """Remove generate_citations field from all LLMResponseWithPrompt nodes"""
    Node = apps.get_model('pipelines', 'Node')
    
    nodes_to_update = []
    for idx, node in enumerate(Node.objects.filter(type='LLMResponseWithPrompt').iterator(100)):
        if 'generate_citations' in node.params:
            del node.params['generate_citations']
            nodes_to_update.append(node)
        
        if idx % 100 == 0:
            Node.objects.bulk_update(nodes_to_update, ['params'])
            nodes_to_update = []
    
    # Update any remaining nodes
    if nodes_to_update:
        Node.objects.bulk_update(nodes_to_update, ['params'])



class Migration(migrations.Migration):

    dependencies = [
        ('pipelines', '0018_add_max_results_node_param'),
    ]

    operations = [
        migrations.RunPython(set_generate_citations_true, remove_generate_citations_field),
    ]

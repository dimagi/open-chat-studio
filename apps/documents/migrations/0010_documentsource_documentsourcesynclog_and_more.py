# Generated by Django 5.1.5 on 2025-07-16 15:09

import apps.documents.models
import apps.utils.models
import django.core.serializers.json
import django.db.models.deletion
import django_pydantic_field.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('documents', '0009_collection_embedding_provider_model_and_more'),
        ('teams', '0007_create_commcare_connect_flag'),
    ]

    operations = [
        migrations.CreateModel(
            name='DocumentSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('source_type', models.CharField(choices=[('github', 'GitHub Repository'), ('confluence', 'Confluence Space')], help_text='Type of document source', max_length=20)),
                ('config', django_pydantic_field.fields.PydanticSchemaField(config=None, encoder=django.core.serializers.json.DjangoJSONEncoder, help_text='Configuration for the document source', schema=apps.documents.models.DocumentSourceConfig)),
                ('auto_sync_enabled', models.BooleanField(default=False, help_text='Automatically sync this source on a schedule')),
                ('last_sync', models.DateTimeField(blank=True, help_text='Timestamp of the last successful sync', null=True)),
                ('collection', models.OneToOneField(help_text='The collection this document source belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='document_source', to='documents.collection')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teams.team', verbose_name='Team')),
            ],
            bases=(models.Model, apps.utils.models.VersioningMixin),
        ),
        migrations.CreateModel(
            name='DocumentSourceSyncLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sync_date', models.DateTimeField(auto_now_add=True, help_text='When the sync was performed')),
                ('status', models.CharField(choices=[('success', 'Success'), ('failed', 'Failed'), ('in_progress', 'In Progress')], help_text='Status of the sync', max_length=20)),
                ('files_added', models.IntegerField(default=0, help_text='Number of files added during sync')),
                ('files_updated', models.IntegerField(default=0, help_text='Number of files updated during sync')),
                ('files_removed', models.IntegerField(default=0, help_text='Number of files removed during sync')),
                ('error_message', models.TextField(blank=True, help_text='Error message if sync failed')),
                ('duration_seconds', models.FloatField(blank=True, help_text='Duration of the sync in seconds', null=True)),
                ('document_source', models.ForeignKey(help_text='The document source this sync log belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='sync_logs', to='documents.documentsource')),
            ],
            options={
                'ordering': ['-sync_date'],
            },
        ),
    ]

# Generated by Django 4.2.11 on 2024-06-19 17:15
from django_celery_beat.models import PeriodicTask
from django.db import migrations

from apps.events.forms import EventActionForm
from apps.events.models import EventActionType, ScheduledMessage
from apps.experiments.models import ExperimentSession


class Migration(migrations.Migration):
    def migrate_periodic_tasks(apps, schema_editor):
        for periodic_task in PeriodicTask.objects.filter(name__startswith="reminder-"):
            parts = periodic_task.name.split("-")
            if len(parts) == 3:
                experiment_session_id = parts[1]
                experiment_session = ExperimentSession.objects.get(id=experiment_session_id)
                params = {
                    "time_period": periodic_task.kwargs.get("time_period", "day"),
                    "frequency": periodic_task.kwargs.get("frequency", 1),
                    "repetitions": periodic_task.kwargs.get("repetitions", 1),
                }
                event_action_form = EventActionForm(params, experiment_id=experiment_session.experiment.id, action_type= EventActionType.SCHEDULETRIGGER)
                action_instance = None
                if event_action_form.is_valid():
                    action_instance = event_action_form.save()
                ScheduledMessage.objects.create(
                    experiment_id=experiment_session.experiment.id,
                    action=action_instance, #EventAction
                    participant_id=experiment_session.participant.id,
                    next_trigger_date=periodic_task.next_run_at,
                    last_triggered_at=periodic_task.last_run_at,
                    total_triggers=periodic_task.total_run_count,
                    is_complete=periodic_task.total_run_count >= periodic_task.kwargs.get("repetitions", 0),
                    custom_schedule_params={},
                )
            periodic_task.delete()
    dependencies = [
        ('events', '0010_alter_eventaction_action_type'),
    ]

    operations = [
        migrations.RunPython(migrate_periodic_tasks),
    ]

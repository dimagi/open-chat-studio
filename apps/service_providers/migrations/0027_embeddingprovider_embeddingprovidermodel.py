# Generated by Django 5.1.5 on 2025-05-28 16:04

import apps.utils.models
import django.db.models.deletion
import django_cryptography.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('service_providers', '0026_add_google_gemini_models'),
        ('teams', '0007_create_commcare_connect_flag'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmbeddingProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(choices=[('openai', 'OpenAI')], max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('config', django_cryptography.fields.encrypt(models.JSONField(default=dict))),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='embedding_providers', to='teams.team')),
            ],
            options={
                'ordering': ('type', 'name'),
            },
            bases=(models.Model, apps.utils.models.VersioningMixin),
        ),
        migrations.CreateModel(
            name='EmbeddingProviderModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('type', models.CharField(choices=[('openai', 'OpenAI')], max_length=255)),
                ('name', models.CharField(help_text="The name of the model. e.g. 'text-embedding-3-small'", max_length=128)),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='teams.team', verbose_name='Team')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('team', 'name', 'type'), name='unique_team_name_type')],
            },
            bases=(models.Model, apps.utils.models.VersioningMixin),
        ),
    ]

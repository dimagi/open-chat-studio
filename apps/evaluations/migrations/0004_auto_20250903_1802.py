# Generated by Django 5.1.5 on 2025-09-03 18:02

from django.db import migrations


def populate_message_in_evaluation_results(apps, schema_editor):
    """
    Populate the 'message' field in the output JSON of existing EvaluationResult records.
    The message field should contain the EvaluationMessage data that was run against.
    """
    EvaluationResult = apps.get_model("evaluations", "EvaluationResult")

    batch_size = 1000
    updated_count = 0

    results = EvaluationResult.objects.select_related('message').exclude(
        output__has_key='message'
    ).filter(
        message__isnull=False,
        output__isnull=False
    )

    for result in results.iterator(chunk_size=batch_size):
        message_data = {
            "input": result.message.input,
            "output": result.message.output,
            "context": result.message.context,
            "history": result.message.history,
            "metadata": result.message.metadata,
        }

        result.output["message"] = message_data
        result.save(update_fields=['output'])
        updated_count += 1

        if updated_count % batch_size == 0:
            print(f"Updated {updated_count} results...")

    if updated_count > 0:
        print(f"Migration complete. Updated {updated_count} evaluation results.")


def reverse_populate_message_in_evaluation_results(apps, schema_editor):
    """
    Remove the 'message' field from the output JSON of EvaluationResult records.
    """
    EvaluationResult = apps.get_model("evaluations", "EvaluationResult")

    batch_size = 1000
    updated_count = 0

    results = EvaluationResult.objects.all()

    for result in results.iterator(chunk_size=batch_size):
        if result.output and isinstance(result.output, dict) and "message" in result.output:
            # Remove the message field from output
            del result.output["message"]
            result.save(update_fields=['output'])
            updated_count += 1

        if updated_count % batch_size == 0:
            print(f"Reverted {updated_count} results...")

    if updated_count > 0:
        print(f"Reverse migration complete. Reverted {updated_count} evaluation results.")


class Migration(migrations.Migration):

    dependencies = [
        ("evaluations", "0003_evaluationrun_type"),
    ]

    operations = [
        migrations.RunPython(
            populate_message_in_evaluation_results,
            reverse_populate_message_in_evaluation_results,
        ),
    ]
